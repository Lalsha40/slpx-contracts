{
  "address": "0x4e1A1FdE10494d714D2620aAF7B27B878458459c",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "astrOFTWithFee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "destChainId",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "minAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_dstGasForCall",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_adapterParams",
          "type": "bytes"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_dstGasForCall",
          "type": "uint64"
        },
        {
          "internalType": "bytes",
          "name": "_adapterParams",
          "type": "bytes"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "remoteContract",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_action",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_minAmount",
          "type": "uint256"
        }
      ],
      "name": "setMinAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_remoteContract",
          "type": "address"
        }
      ],
      "name": "setRemoteContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vAstrOFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x97c1a7269b5e62923e2e08d7ba4631ee54d42f6e4d7964241c0b12413c4915e1",
  "receipt": {
    "to": null,
    "from": "0x4597C97a43dFBb4a398E2b16AA9cE61f90d801DD",
    "contractAddress": "0x4e1A1FdE10494d714D2620aAF7B27B878458459c",
    "transactionIndex": 0,
    "gasUsed": "650098",
    "logsBloom": "0x
    "blockHash": "0xb2c1f90ef32636789a58fa132b383a54584f869b8a420c6ae489dbadd0b035f0",
    "transactionHash": "0x97c1a7269b5e62923e2e08d7ba4631ee54d42f6e4d7964241c0b12413c4915e1",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 466143,
        "transactionHash": "0x97c1a7269b5e62923e2e08d7ba4631ee54d42f6e4d7964241c0b12413c4915e1",
        "address": "0x4e1A1FdE10494d714D2620aAF7B27B878458459c",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004597c97a43dfbb4a398e2b16aa9ce61f90d801dd"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xb2c1f90ef32636789a58fa132b383a54584f869b8a420c6ae489dbadd0b035f0"
      }
    ],
    "blockNumber": 466143,
    "cumulativeGasUsed": "650098",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "dccb7a3a974ad16281937acb7fdd19c4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"astrOFTWithFee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"minAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_dstGasForCall\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_dstGasForCall\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"_adapterParams\",\"type\":\"bytes\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remoteContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_action\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"}],\"name\":\"setMinAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_remoteContract\",\"type\":\"address\"}],\"name\":\"setRemoteContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vAstrOFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AstarZkSlpx.sol\":\"AstarZkSlpx\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/AstarZkSlpx.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./interfaces/IOFTWithFee.sol\\\";\\nimport \\\"./interfaces/IOFTV2.sol\\\";\\n\\ncontract AstarZkSlpx is Ownable {\\n    address public astrOFTWithFee = 0xEaFAF3EDA029A62bCbE8a0C9a4549ef0fEd5a400;\\n    address public vAstrOFT = 0x051713fD66845a13BF23BACa008C5C22C27Ccb58;\\n    uint8 private constant MINT = 0;\\n    uint8 private constant REDEEM = 1;\\n    uint16 public constant destChainId = 10210;\\n    bytes32 public remoteContract;\\n\\n    mapping(uint8 => uint256) public minAmount;\\n\\n    event Mint(address caller, uint256 amount);\\n    event Redeem(address caller, uint256 amount);\\n\\n    function setRemoteContract(address _remoteContract) public onlyOwner {\\n        remoteContract = bytes32(uint(uint160(_remoteContract)));\\n    }\\n\\n    function setMinAmount(uint8 _action, uint256 _minAmount) public onlyOwner {\\n        minAmount[_action] = _minAmount;\\n    }\\n\\n    function mint(uint256 _amount, uint64 _dstGasForCall, bytes calldata _adapterParams) external payable {\\n        require(_amount >= minAmount[MINT], \\\"amount too small\\\");\\n        ICommonOFT.LzCallParams memory callParams = ICommonOFT.LzCallParams(\\n            payable(msg.sender), \\n            address(0), \\n            _adapterParams\\n        );\\n\\n        IOFTWithFee(astrOFTWithFee).sendAndCall{value: msg.value}(\\n            msg.sender,\\n            destChainId,\\n            remoteContract,\\n            _amount,\\n            _amount,\\n            abi.encode(_msgSender(), MINT),\\n            _dstGasForCall,\\n            callParams\\n        );\\n\\n        emit Mint(msg.sender, _amount);\\n    }\\n\\n    function redeem(uint256 _amount, uint64 _dstGasForCall, bytes calldata _adapterParams) external payable {\\n        require(_amount >= minAmount[REDEEM], \\\"amount too small\\\");\\n        ICommonOFT.LzCallParams memory callParams = ICommonOFT.LzCallParams(\\n            payable(msg.sender),\\n            address(0),\\n            _adapterParams\\n        );\\n\\n        IOFTV2(vAstrOFT).sendAndCall{value: msg.value}(\\n            msg.sender,\\n            destChainId,\\n            remoteContract,\\n            _amount,\\n            abi.encode(_msgSender(), REDEEM),\\n            _dstGasForCall,\\n            callParams\\n        );\\n\\n        emit Redeem(msg.sender, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0xd00963516aff7b3c70f12d7e948ebcfd53d1b4f9e5816b56a6475fe09606d15a\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/ICommonOFT.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Interface of the IOFT core standard\\n */\\ninterface ICommonOFT is IERC165 {\\n\\n    struct LzCallParams {\\n        address payable refundAddress;\\n        address zroPaymentAddress;\\n        bytes adapterParams;\\n    }\\n\\n    /**\\n     * @dev estimate send token `_tokenId` to (`_dstChainId`, `_toAddress`)\\n     * _dstChainId - L0 defined chain id to send tokens too\\n     * _toAddress - dynamic bytes array which contains the address to whom you are sending tokens to on the dstChain\\n     * _amount - amount of the tokens to transfer\\n     * _useZro - indicates to use zro to pay L0 fees\\n     * _adapterParam - flexible bytes array to indicate messaging adapter services in L0\\n     */\\n    function estimateSendFee(uint16 _dstChainId, bytes32 _toAddress, uint _amount, bool _useZro, bytes calldata _adapterParams) external view returns (uint nativeFee, uint zroFee);\\n\\n    function estimateSendAndCallFee(uint16 _dstChainId, bytes32 _toAddress, uint _amount, bytes calldata _payload, uint64 _dstGasForCall, bool _useZro, bytes calldata _adapterParams) external view returns (uint nativeFee, uint zroFee);\\n\\n    /**\\n     * @dev returns the circulating amount of tokens on current chain\\n     */\\n    function circulatingSupply() external view returns (uint);\\n\\n    /**\\n     * @dev returns the address of the ERC20 token\\n     */\\n    function token() external view returns (address);\\n}\\n\",\"keccak256\":\"0x7f487b03f4560c90bb1c1dd7a3f07cad38ea9187039131ba884c8c8f05cf0b49\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/IOFTV2.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\nimport \\\"./ICommonOFT.sol\\\";\\n\\n/**\\n * @dev Interface of the IOFT core standard\\n */\\ninterface IOFTV2 is ICommonOFT {\\n\\n    /**\\n     * @dev send `_amount` amount of token to (`_dstChainId`, `_toAddress`) from `_from`\\n     * `_from` the owner of token\\n     * `_dstChainId` the destination chain identifier\\n     * `_toAddress` can be any size depending on the `dstChainId`.\\n     * `_amount` the quantity of tokens in wei\\n     * `_refundAddress` the address LayerZero refunds if too much message fee is sent\\n     * `_zroPaymentAddress` set to address(0x0) if not paying in ZRO (LayerZero Token)\\n     * `_adapterParams` is a flexible bytes array to indicate messaging adapter services\\n     */\\n    function sendFrom(address _from, uint16 _dstChainId, bytes32 _toAddress, uint _amount, LzCallParams calldata _callParams) external payable;\\n\\n    function sendAndCall(address _from, uint16 _dstChainId, bytes32 _toAddress, uint _amount, bytes calldata _payload, uint64 _dstGasForCall, LzCallParams calldata _callParams) external payable;\\n}\\n\\n\",\"keccak256\":\"0xe1aae1b3613481bf4d3c4d91c117b044f849dbde88841e49207c5da838fac42f\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/IOFTWithFee.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\nimport \\\"./ICommonOFT.sol\\\";\\n\\ninterface IOFTWithFee is ICommonOFT {\\n    function deposit() external payable;\\n    function withdraw(uint _amount) external;\\n    function sendFrom(address _from, uint16 _dstChainId, bytes32 _toAddress, uint _amount, uint _minAmount, LzCallParams calldata _callParams) external payable;\\n    function sendAndCall(address _from, uint16 _dstChainId, bytes32 _toAddress, uint _amount, uint _minAmount, bytes calldata _payload, uint64 _dstGasForCall, LzCallParams calldata _callParams) external payable;\\n}\\n\",\"keccak256\":\"0x9d8ebcbbe95499d1d86cdf1996f1d4d01352f81557a9796f6d82faf6bd82e108\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x6080604052600180546001600160a01b031990811673eafaf3eda029a62bcbe8a0c9a4549ef0fed5a400179091556002805490911673051713fd66845a13bf23baca008c5c22c27ccb5817905534801561005857600080fd5b5061006233610067565b6100b7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610985806100c66000396000f3fe6080604052600436106100a75760003560e01c8063aed7bbbb11610064578063aed7bbbb1461018f578063b3754e86146101a2578063c0afb3f4146101b5578063c4af1c0b146101d5578063c8b75259146101fe578063f2fde38b1461021e57600080fd5b80630663b2d1146100ac5780630c5d9931146100d557806327e540111461010d578063715018a61461012d5780638da5cb5b14610144578063aabdc08214610162575b600080fd5b3480156100b857600080fd5b506100c260035481565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506001546100f5906001600160a01b031681565b6040516001600160a01b0390911681526020016100cc565b34801561011957600080fd5b506002546100f5906001600160a01b031681565b34801561013957600080fd5b5061014261023e565b005b34801561015057600080fd5b506000546001600160a01b03166100f5565b34801561016e57600080fd5b506100c261017d3660046106e8565b60046020526000908152604090205481565b61014261019d36600461070a565b610252565b6101426101b036600461070a565b6103ed565b3480156101c157600080fd5b506101426101d036600461079a565b61057b565b3480156101e157600080fd5b506101eb6127e281565b60405161ffff90911681526020016100cc565b34801561020a57600080fd5b506101426102193660046107c3565b610591565b34801561022a57600080fd5b5061014261023936600461079a565b6105af565b610246610628565b6102506000610682565b565b600160005260046020527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe05548410156102c55760405162461bcd60e51b815260206004820152601060248201526f185b5bdd5b9d081d1bdbc81cdb585b1b60821b60448201526064015b60405180910390fd5b60408051606081018252338152600060208083018290528351601f86018290048202810182018552858152919383019190869086908190840183828082843760009201919091525050509152506002546003546040805133602082018190526001828401528251808303840181526060830193849052630ec4076960e31b9093529495506001600160a01b03909316936376203b48933493610374936127e2928d91908d908b90606401610877565b6000604051808303818588803b15801561038d57600080fd5b505af11580156103a1573d6000803e3d6000fd5b505060408051338152602081018a90527f222838db2794d11532d940e8dec38ae307ed0b63cd97c233322e221f998767a694500191506103de9050565b60405180910390a15050505050565b6000805260046020527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec5484101561045a5760405162461bcd60e51b815260206004820152601060248201526f185b5bdd5b9d081d1bdbc81cdb585b1b60821b60448201526064016102bc565b60408051606081018252338152600060208083018290528351601f860182900482028101820185528581529193830191908690869081908401838280828437600092018290525093909452505060015460035460408051336020820181905281830195909552815180820383018152606082019283905263455ba27d60e01b9092529596506001600160a01b039092169463455ba27d945034936105119390926127e29290918d918291908e908c906064016108de565b6000604051808303818588803b15801561052a57600080fd5b505af115801561053e573d6000803e3d6000fd5b505060408051338152602081018a90527f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688594500191506103de9050565b610583610628565b6001600160a01b0316600355565b610599610628565b60ff909116600090815260046020526040902055565b6105b7610628565b6001600160a01b03811661061c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102bc565b61062581610682565b50565b6000546001600160a01b031633146102505760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102bc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803560ff811681146106e357600080fd5b919050565b6000602082840312156106fa57600080fd5b610703826106d2565b9392505050565b6000806000806060858703121561072057600080fd5b84359350602085013567ffffffffffffffff808216821461074057600080fd5b9093506040860135908082111561075657600080fd5b818701915087601f83011261076a57600080fd5b81358181111561077957600080fd5b88602082850101111561078b57600080fd5b95989497505060200194505050565b6000602082840312156107ac57600080fd5b81356001600160a01b038116811461070357600080fd5b600080604083850312156107d657600080fd5b6107df836106d2565b946020939093013593505050565b6000815180845260005b81811015610813576020818501810151868301820152016107f7565b81811115610825576000602083870101525b50601f01601f19169290920160200192915050565b600060018060a01b038083511684528060208401511660208501525060408201516060604085015261086f60608501826107ed565b949350505050565b60018060a01b038816815261ffff8716602082015285604082015284606082015260e0608082015260006108ae60e08301866107ed565b67ffffffffffffffff851660a084015282810360c08401526108d0818561083a565b9a9950505050505050505050565b600061010060018060a01b038b16835261ffff8a1660208401528860408401528760608401528660808401528060a084015261091c818401876107ed565b905067ffffffffffffffff851660c084015282810360e0840152610940818561083a565b9b9a505050505050505050505056fea2646970667358221220aef3417451fbfd42ff44c4053ae78cd5ebecd02726264c6a09c657a08245dbe664736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c8063aed7bbbb11610064578063aed7bbbb1461018f578063b3754e86146101a2578063c0afb3f4146101b5578063c4af1c0b146101d5578063c8b75259146101fe578063f2fde38b1461021e57600080fd5b80630663b2d1146100ac5780630c5d9931146100d557806327e540111461010d578063715018a61461012d5780638da5cb5b14610144578063aabdc08214610162575b600080fd5b3480156100b857600080fd5b506100c260035481565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506001546100f5906001600160a01b031681565b6040516001600160a01b0390911681526020016100cc565b34801561011957600080fd5b506002546100f5906001600160a01b031681565b34801561013957600080fd5b5061014261023e565b005b34801561015057600080fd5b506000546001600160a01b03166100f5565b34801561016e57600080fd5b506100c261017d3660046106e8565b60046020526000908152604090205481565b61014261019d36600461070a565b610252565b6101426101b036600461070a565b6103ed565b3480156101c157600080fd5b506101426101d036600461079a565b61057b565b3480156101e157600080fd5b506101eb6127e281565b60405161ffff90911681526020016100cc565b34801561020a57600080fd5b506101426102193660046107c3565b610591565b34801561022a57600080fd5b5061014261023936600461079a565b6105af565b610246610628565b6102506000610682565b565b600160005260046020527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe05548410156102c55760405162461bcd60e51b815260206004820152601060248201526f185b5bdd5b9d081d1bdbc81cdb585b1b60821b60448201526064015b60405180910390fd5b60408051606081018252338152600060208083018290528351601f86018290048202810182018552858152919383019190869086908190840183828082843760009201919091525050509152506002546003546040805133602082018190526001828401528251808303840181526060830193849052630ec4076960e31b9093529495506001600160a01b03909316936376203b48933493610374936127e2928d91908d908b90606401610877565b6000604051808303818588803b15801561038d57600080fd5b505af11580156103a1573d6000803e3d6000fd5b505060408051338152602081018a90527f222838db2794d11532d940e8dec38ae307ed0b63cd97c233322e221f998767a694500191506103de9050565b60405180910390a15050505050565b6000805260046020527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec5484101561045a5760405162461bcd60e51b815260206004820152601060248201526f185b5bdd5b9d081d1bdbc81cdb585b1b60821b60448201526064016102bc565b60408051606081018252338152600060208083018290528351601f860182900482028101820185528581529193830191908690869081908401838280828437600092018290525093909452505060015460035460408051336020820181905281830195909552815180820383018152606082019283905263455ba27d60e01b9092529596506001600160a01b039092169463455ba27d945034936105119390926127e29290918d918291908e908c906064016108de565b6000604051808303818588803b15801561052a57600080fd5b505af115801561053e573d6000803e3d6000fd5b505060408051338152602081018a90527f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688594500191506103de9050565b610583610628565b6001600160a01b0316600355565b610599610628565b60ff909116600090815260046020526040902055565b6105b7610628565b6001600160a01b03811661061c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102bc565b61062581610682565b50565b6000546001600160a01b031633146102505760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102bc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803560ff811681146106e357600080fd5b919050565b6000602082840312156106fa57600080fd5b610703826106d2565b9392505050565b6000806000806060858703121561072057600080fd5b84359350602085013567ffffffffffffffff808216821461074057600080fd5b9093506040860135908082111561075657600080fd5b818701915087601f83011261076a57600080fd5b81358181111561077957600080fd5b88602082850101111561078b57600080fd5b95989497505060200194505050565b6000602082840312156107ac57600080fd5b81356001600160a01b038116811461070357600080fd5b600080604083850312156107d657600080fd5b6107df836106d2565b946020939093013593505050565b6000815180845260005b81811015610813576020818501810151868301820152016107f7565b81811115610825576000602083870101525b50601f01601f19169290920160200192915050565b600060018060a01b038083511684528060208401511660208501525060408201516060604085015261086f60608501826107ed565b949350505050565b60018060a01b038816815261ffff8716602082015285604082015284606082015260e0608082015260006108ae60e08301866107ed565b67ffffffffffffffff851660a084015282810360c08401526108d0818561083a565b9a9950505050505050505050565b600061010060018060a01b038b16835261ffff8a1660208401528860408401528760608401528660808401528060a084015261091c818401876107ed565b905067ffffffffffffffff851660c084015282810360e0840152610940818561083a565b9b9a505050505050505050505056fea2646970667358221220aef3417451fbfd42ff44c4053ae78cd5ebecd02726264c6a09c657a08245dbe664736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 818,
        "contract": "contracts/AstarZkSlpx.sol:AstarZkSlpx",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3023,
        "contract": "contracts/AstarZkSlpx.sol:AstarZkSlpx",
        "label": "astrOFTWithFee",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 3026,
        "contract": "contracts/AstarZkSlpx.sol:AstarZkSlpx",
        "label": "vAstrOFT",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 3037,
        "contract": "contracts/AstarZkSlpx.sol:AstarZkSlpx",
        "label": "remoteContract",
        "offset": 0,
        "slot": "3",
        "type": "t_bytes32"
      },
      {
        "astId": 3041,
        "contract": "contracts/AstarZkSlpx.sol:AstarZkSlpx",
        "label": "minAmount",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint8,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_uint8,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint8",
        "label": "mapping(uint8 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}