{
  "address": "0xB75fBE08135B920C622654de26579Efc402F0a13",
  "abi": [
    {
      "inputs": [],
      "name": "MINT_CALL_INDEX",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PALLET_INDEX",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REDEEM_CALL_INDEX",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STABLE_POOL_SWAP_CALL_INDEX",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SWAP_CALL_INDEX",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bytes2",
          "name": "token",
          "type": "bytes2"
        },
        {
          "internalType": "bytes",
          "name": "targetChain",
          "type": "bytes"
        },
        {
          "internalType": "string",
          "name": "remark",
          "type": "string"
        }
      ],
      "name": "buildMintCallBytes",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bytes2",
          "name": "vtoken",
          "type": "bytes2"
        },
        {
          "internalType": "bytes",
          "name": "targetChain",
          "type": "bytes"
        }
      ],
      "name": "buildRedeemCallBytes",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "pool_id",
          "type": "uint32"
        },
        {
          "internalType": "bytes2",
          "name": "currency_in",
          "type": "bytes2"
        },
        {
          "internalType": "bytes2",
          "name": "currency_out",
          "type": "bytes2"
        },
        {
          "internalType": "uint128",
          "name": "min_dy",
          "type": "uint128"
        },
        {
          "internalType": "bytes",
          "name": "targetChain",
          "type": "bytes"
        }
      ],
      "name": "buildStablePoolSwapCallBytes",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "bytes2",
          "name": "currency_in",
          "type": "bytes2"
        },
        {
          "internalType": "bytes2",
          "name": "currency_out",
          "type": "bytes2"
        },
        {
          "internalType": "uint128",
          "name": "currency_out_min",
          "type": "uint128"
        },
        {
          "internalType": "bytes",
          "name": "targetChain",
          "type": "bytes"
        }
      ],
      "name": "buildSwapCallBytes",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x3e46bbedf30176ca583dcb45461202228205704069058c6b9c16f015ba5d3ed6",
  "receipt": {
    "to": null,
    "from": "0x4597C97a43dFBb4a398E2b16AA9cE61f90d801DD",
    "contractAddress": "0xB75fBE08135B920C622654de26579Efc402F0a13",
    "transactionIndex": 0,
    "gasUsed": "989932",
    "logsBloom": "0x
    "blockHash": "0xeb1820eed19e57867fa1d63aa94ee7eee109acad37aea5507884d901d69803cf",
    "transactionHash": "0x3e46bbedf30176ca583dcb45461202228205704069058c6b9c16f015ba5d3ed6",
    "logs": [],
    "blockNumber": 2268484,
    "cumulativeGasUsed": "989932",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d85bbcdbb6cede1a069b9e4e8d87b664",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MINT_CALL_INDEX\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PALLET_INDEX\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REDEEM_CALL_INDEX\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STABLE_POOL_SWAP_CALL_INDEX\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAP_CALL_INDEX\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bytes2\",\"name\":\"token\",\"type\":\"bytes2\"},{\"internalType\":\"bytes\",\"name\":\"targetChain\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"remark\",\"type\":\"string\"}],\"name\":\"buildMintCallBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bytes2\",\"name\":\"vtoken\",\"type\":\"bytes2\"},{\"internalType\":\"bytes\",\"name\":\"targetChain\",\"type\":\"bytes\"}],\"name\":\"buildRedeemCallBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pool_id\",\"type\":\"uint32\"},{\"internalType\":\"bytes2\",\"name\":\"currency_in\",\"type\":\"bytes2\"},{\"internalType\":\"bytes2\",\"name\":\"currency_out\",\"type\":\"bytes2\"},{\"internalType\":\"uint128\",\"name\":\"min_dy\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"targetChain\",\"type\":\"bytes\"}],\"name\":\"buildStablePoolSwapCallBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"bytes2\",\"name\":\"currency_in\",\"type\":\"bytes2\"},{\"internalType\":\"bytes2\",\"name\":\"currency_out\",\"type\":\"bytes2\"},{\"internalType\":\"uint128\",\"name\":\"currency_out_min\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"targetChain\",\"type\":\"bytes\"}],\"name\":\"buildSwapCallBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/BuildCallData.sol\":\"BuildCallData\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/BuildCallData.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.10;\\n\\nlibrary BuildCallData {\\n    uint8 public constant PALLET_INDEX = 125;\\n    uint8 public constant MINT_CALL_INDEX = 0;\\n    uint8 public constant SWAP_CALL_INDEX = 1;\\n    uint8 public constant REDEEM_CALL_INDEX = 2;\\n    uint8 public constant STABLE_POOL_SWAP_CALL_INDEX = 3;\\n\\n    function buildMintCallBytes(\\n        address caller,\\n        bytes2 token,\\n        bytes memory targetChain,\\n        string memory remark\\n    ) public pure returns (bytes memory) {\\n        bytes memory prefix = new bytes(2);\\n        // storage pallet index\\n        prefix[0] = bytes1(PALLET_INDEX);\\n        // storage call index\\n        prefix[1] = bytes1(MINT_CALL_INDEX);\\n\\n        // astar target_chain = bytes1(0)\\n        return\\n            bytes.concat(\\n                prefix,\\n                abi.encodePacked(caller),\\n                token,\\n                targetChain,\\n                toScaleString(remark)\\n            );\\n    }\\n\\n    function buildSwapCallBytes(\\n        address caller,\\n        bytes2 currency_in,\\n        bytes2 currency_out,\\n        uint128 currency_out_min,\\n        bytes memory targetChain\\n    ) public pure returns (bytes memory) {\\n        bytes memory prefix = new bytes(2);\\n        // storage pallet index\\n        prefix[0] = bytes1(PALLET_INDEX);\\n        // storage call index\\n        prefix[1] = bytes1(SWAP_CALL_INDEX);\\n\\n        // astar target_chain = bytes1(0)\\n        return\\n            bytes.concat(\\n                prefix,\\n                abi.encodePacked(caller),\\n                currency_in,\\n                currency_out,\\n                encode_uint128(currency_out_min),\\n                targetChain\\n            );\\n    }\\n\\n    function buildStablePoolSwapCallBytes(\\n        address caller,\\n        uint32 pool_id,\\n        bytes2 currency_in,\\n        bytes2 currency_out,\\n        uint128 min_dy,\\n        bytes memory targetChain\\n    ) public pure returns (bytes memory) {\\n        bytes memory prefix = new bytes(2);\\n        // storage pallet index\\n        prefix[0] = bytes1(PALLET_INDEX);\\n        // storage call index\\n        prefix[1] = bytes1(STABLE_POOL_SWAP_CALL_INDEX);\\n\\n        // astar target_chain = bytes1(0)\\n        return\\n            bytes.concat(\\n                prefix,\\n                abi.encodePacked(caller),\\n                encode_uint32(pool_id),\\n                currency_in,\\n                currency_out,\\n                encode_uint128(min_dy),\\n                targetChain\\n            );\\n    }\\n\\n    function buildRedeemCallBytes(\\n        address caller,\\n        bytes2 vtoken,\\n        bytes memory targetChain\\n    ) public pure returns (bytes memory) {\\n        bytes memory prefix = new bytes(2);\\n        // storage pallet index\\n        prefix[0] = bytes1(PALLET_INDEX);\\n        // storage call index\\n        prefix[1] = bytes1(REDEEM_CALL_INDEX);\\n\\n        // astar target_chain = bytes1(0)\\n        return\\n            bytes.concat(prefix, abi.encodePacked(caller), vtoken, targetChain);\\n    }\\n\\n    //https://docs.substrate.io/reference/scale-codec/\\n    function encode_uint128(uint128 x) internal pure returns (bytes memory) {\\n        bytes memory b = new bytes(16);\\n        for (uint i = 0; i < 16; i++) {\\n            b[i] = bytes1(uint8(x / (2 ** (8 * i))));\\n        }\\n        return b;\\n    }\\n\\n    //https://docs.substrate.io/reference/scale-codec/\\n    function encode_uint32(uint32 x) internal pure returns (bytes memory) {\\n        bytes memory b = new bytes(4);\\n        for (uint i = 0; i < 4; i++) {\\n            b[i] = bytes1(uint8(x / (2 ** (8 * i))));\\n        }\\n        return b;\\n    }\\n\\n    //https://docs.substrate.io/reference/scale-codec/\\n    function toTruncBytes(uint64 x) internal pure returns (bytes memory) {\\n        bytes memory b = new bytes(8);\\n        uint len = 0;\\n        for (uint i = 0; i < 8; i++) {\\n            uint8 temp = uint8(x / (2 ** (8 * i)));\\n            if (temp != 0) {\\n                b[i] = bytes1(temp);\\n            } else {\\n                len = i;\\n                break;\\n            }\\n        }\\n        bytes memory rst = new bytes(len);\\n        for (uint i = 0; i < len; i++) {\\n            rst[i] = b[i];\\n        }\\n        return rst;\\n    }\\n\\n    // Convert an hexadecimal character to their value\\n    function fromScaleChar(uint8 c) internal pure returns (uint8) {\\n        if (bytes1(c) >= bytes1(\\\"0\\\") && bytes1(c) <= bytes1(\\\"9\\\")) {\\n            return 48 + c - uint8(bytes1(\\\"0\\\"));\\n        }\\n        if (bytes1(c) >= bytes1(\\\"a\\\") && bytes1(c) <= bytes1(\\\"z\\\")) {\\n            return 97 + c - uint8(bytes1(\\\"a\\\"));\\n        }\\n        if (bytes1(c) >= bytes1(\\\"A\\\") && bytes1(c) <= bytes1(\\\"Z\\\")) {\\n            return 65 + c - uint8(bytes1(\\\"A\\\"));\\n        }\\n        revert(\\\"fail\\\");\\n    }\\n\\n    // encode the string to bytes\\n    // following the scale format\\n    // format: len + content\\n    // a-z: 61->87\\n    // A-Z: 41->57\\n    // 0-9: 30->40\\n    function toScaleString(\\n        string memory s\\n    ) internal pure returns (bytes memory) {\\n        bytes memory ss = bytes(s);\\n        bytes memory len = toTruncBytes(uint64(ss.length * 4));\\n        bytes memory content = new bytes(ss.length);\\n        for (uint i = 0; i < ss.length; ++i) {\\n            content[i] = bytes1(fromScaleChar(uint8(ss[i])));\\n        }\\n        bytes memory rst = bytes.concat(len, content);\\n        return rst;\\n    }\\n}\\n\",\"keccak256\":\"0xf338fd01a9f7c3677949ad54f3ad65294d27944c62c4af0cf4b44b5933ed90eb\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x6110f061003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061009d5760003560e01c80636bc6c67f116100705780636bc6c67f146100d95780639f004783146100f9578063b92155271461010c578063cb070de51461011f578063d53d7cad1461013257600080fd5b806314dadaaa146100a25780632b6a89ca146100c157806343fef1af146100c957806354ffa3e8146100d1575b600080fd5b6100aa600181565b60405160ff90911681526020015b60405180910390f35b6100aa600381565b6100aa607d81565b6100aa600281565b6100ec6100e7366004610a6f565b61013a565b6040516100b89190610b39565b6100ec610107366004610b6c565b610225565b6100ec61011a366004610bca565b6102f5565b6100ec61012d366004610c63565b6103d2565b6100aa600081565b60408051600280825281830190925260609160009190602082018180368337019050509050607d60f81b8160008151811061017757610177610ce3565b60200101906001600160f81b031916908160001a905350600360f81b816001815181106101a6576101a6610ce3565b60200101906001600160f81b031916908160001a90535080886040516020016101cf9190610cf9565b6040516020818303038152906040526101e7896104b2565b88886101f28961054e565b886040516020016102099796959493929190610d16565b6040516020818303038152906040529150509695505050505050565b60408051600280825281830190925260609160009190602082018180368337019050509050607d60f81b8160008151811061026257610262610ce3565b60200101906001600160f81b031916908160001a905350600260f81b8160018151811061029157610291610ce3565b60200101906001600160f81b031916908160001a90535080856040516020016102ba9190610cf9565b60408051601f19818403018152908290526102dc929187908790602001610da3565b6040516020818303038152906040529150509392505050565b60408051600280825281830190925260609160009190602082018180368337019050509050607d60f81b8160008151811061033257610332610ce3565b60200101906001600160f81b031916908160001a905350600060f81b8160018151811061036157610361610ce3565b60200101906001600160f81b031916908160001a905350808660405160200161038a9190610cf9565b60405160208183030381529060405286866103a4876105e6565b6040516020016103b8959493929190610dfa565b604051602081830303815290604052915050949350505050565b60408051600280825281830190925260609160009190602082018180368337019050509050607d60f81b8160008151811061040f5761040f610ce3565b60200101906001600160f81b031916908160001a905350600160f81b8160018151811061043e5761043e610ce3565b60200101906001600160f81b031916908160001a90535080876040516020016104679190610cf9565b60405160208183030381529060405287876104818861054e565b8760405160200161049796959493929190610e68565b60405160208183030381529060405291505095945050505050565b6040805160048082528183019092526060916000919060208201818036833701905050905060005b6004811015610547576104ee816008610ef7565b6104f9906002610ffa565b6105099063ffffffff8616611006565b60f81b82828151811061051e5761051e610ce3565b60200101906001600160f81b031916908160001a9053508061053f81611028565b9150506104da565b5092915050565b6040805160108082528183019092526060916000919060208201818036833701905050905060005b60108110156105475761058a816008610ef7565b610595906002610ffa565b6105a8906001600160801b038616611006565b60f81b8282815181106105bd576105bd610ce3565b60200101906001600160f81b031916908160001a905350806105de81611028565b915050610576565b606060008290506000610605825160046106009190610ef7565b6106ea565b90506000825167ffffffffffffffff811115610623576106236109bc565b6040519080825280601f01601f19166020018201604052801561064d576020820181803683370190505b50905060005b83518110156106ba5761067e84828151811061067157610671610ce3565b016020015160f81c610856565b60f81b82828151811061069357610693610ce3565b60200101906001600160f81b031916908160001a9053506106b381611028565b9050610653565b50600082826040516020016106d0929190611043565b60408051601f198184030181529190529695505050505050565b604080516008808252818301909252606091600091906020820181803683370190505090506000805b60088110156107a1576000610729826008610ef7565b610734906002610ffa565b6107489067ffffffffffffffff8816611006565b905060ff811615610785578060f81b84838151811061076957610769610ce3565b60200101906001600160f81b031916908160001a90535061078e565b819250506107a1565b508061079981611028565b915050610713565b5060008167ffffffffffffffff8111156107bd576107bd6109bc565b6040519080825280601f01601f1916602001820160405280156107e7576020820181803683370190505b50905060005b8281101561084d5783818151811061080757610807610ce3565b602001015160f81c60f81b82828151811061082457610824610ce3565b60200101906001600160f81b031916908160001a9053508061084581611028565b9150506107ed565b50949350505050565b6000600360fc1b60f883901b6001600160f81b0319161080159061088c5750603960f81b60f883901b6001600160f81b03191611155b156108ad57603061089d8382611072565b6108a79190611097565b92915050565b606160f81b60f883901b6001600160f81b031916108015906108e15750603d60f91b60f883901b6001600160f81b03191611155b156108f257606161089d8382611072565b604160f81b60f883901b6001600160f81b031916108015906109265750602d60f91b60f883901b6001600160f81b03191611155b1561093757604161089d8382611072565b60405162461bcd60e51b81526004016109689060208082526004908201526319985a5b60e21b604082015260600190565b60405180910390fd5b80356001600160a01b038116811461098857600080fd5b919050565b80356001600160f01b03198116811461098857600080fd5b80356001600160801b038116811461098857600080fd5b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156109ed576109ed6109bc565b604051601f8501601f19908116603f01168101908282118183101715610a1557610a156109bc565b81604052809350858152868686011115610a2e57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112610a5957600080fd5b610a68838335602085016109d2565b9392505050565b60008060008060008060c08789031215610a8857600080fd5b610a9187610971565b9550602087013563ffffffff81168114610aaa57600080fd5b9450610ab86040880161098d565b9350610ac66060880161098d565b9250610ad4608088016109a5565b915060a087013567ffffffffffffffff811115610af057600080fd5b610afc89828a01610a48565b9150509295509295509295565b60005b83811015610b24578181015183820152602001610b0c565b83811115610b33576000848401525b50505050565b6020815260008251806020840152610b58816040850160208701610b09565b601f01601f19169190910160400192915050565b600080600060608486031215610b8157600080fd5b610b8a84610971565b9250610b986020850161098d565b9150604084013567ffffffffffffffff811115610bb457600080fd5b610bc086828701610a48565b9150509250925092565b60008060008060808587031215610be057600080fd5b610be985610971565b9350610bf76020860161098d565b9250604085013567ffffffffffffffff80821115610c1457600080fd5b610c2088838901610a48565b93506060870135915080821115610c3657600080fd5b508501601f81018713610c4857600080fd5b610c57878235602084016109d2565b91505092959194509250565b600080600080600060a08688031215610c7b57600080fd5b610c8486610971565b9450610c926020870161098d565b9350610ca06040870161098d565b9250610cae606087016109a5565b9150608086013567ffffffffffffffff811115610cca57600080fd5b610cd688828901610a48565b9150509295509295909350565b634e487b7160e01b600052603260045260246000fd5b60609190911b6bffffffffffffffffffffffff1916815260140190565b60008851610d28818460208d01610b09565b885190830190610d3c818360208d01610b09565b8851910190610d4f818360208c01610b09565b6001600160f01b031988811692909101918252861660028201528451610d7c816004840160208901610b09565b8451910190610d92816004840160208801610b09565b016004019998505050505050505050565b60008551610db5818460208a01610b09565b855190830190610dc9818360208a01610b09565b6001600160f01b0319861691019081528351610dec816002840160208801610b09565b016002019695505050505050565b60008651610e0c818460208b01610b09565b865190830190610e20818360208b01610b09565b6001600160f01b0319871691019081528451610e43816002840160208901610b09565b8451910190610e59816002840160208801610b09565b01600201979650505050505050565b60008751610e7a818460208c01610b09565b875190830190610e8e818360208c01610b09565b6001600160f01b031988811692909101918252861660028201528451610ebb816004840160208901610b09565b8451910190610ed1816004840160208801610b09565b0160040198975050505050505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610f1157610f11610ee1565b500290565b600181815b80851115610f51578160001904821115610f3757610f37610ee1565b80851615610f4457918102915b93841c9390800290610f1b565b509250929050565b600082610f68575060016108a7565b81610f75575060006108a7565b8160018114610f8b5760028114610f9557610fb1565b60019150506108a7565b60ff841115610fa657610fa6610ee1565b50506001821b6108a7565b5060208310610133831016604e8410600b8410161715610fd4575081810a6108a7565b610fde8383610f16565b8060001904821115610ff257610ff2610ee1565b029392505050565b6000610a688383610f59565b60008261102357634e487b7160e01b600052601260045260246000fd5b500490565b600060001982141561103c5761103c610ee1565b5060010190565b60008351611055818460208801610b09565b835190830190611069818360208801610b09565b01949350505050565b600060ff821660ff84168060ff0382111561108f5761108f610ee1565b019392505050565b600060ff821660ff8416808210156110b1576110b1610ee1565b9003939250505056fea264697066735822122091f30e9c3966094475a70eda989d8713d43e62c22f0c92d198b95b272408090664736f6c634300080a0033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}